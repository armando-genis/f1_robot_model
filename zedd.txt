
  <!-- zed camera -->
  <link name="zed_camera_link">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>

  <joint name="zed_camera_joint" type="fixed">
    <origin xyz="0.390 0 0.04" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="zed_camera_link"/>
    <axis xyz="0 0 1" />
    <!-- <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0" /> -->
  </joint>


  <!-- zed camera lenses -->
  <!-- It seems these have to have a non-zero mass to have a camera attached? -->
  <link name="camera_link"><!-- this needs to match the name in zed_wrapper/zed_tf.launch -->
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <link name="zed_camera_right_link">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="zed_camera_left_joint" type="fixed">
    <origin xyz="0 0.06 0" rpy="0 0 0"/>
    <parent link="zed_camera_link"/>
    <child link="camera_link"/>
    <axis xyz="0 0 1" />
  </joint>
  <joint name="zed_camera_right_joint" type="fixed">
    <origin xyz="0 -0.06 0" rpy="0 0 0"/>
    <parent link="zed_camera_link"/>
    <child link="zed_camera_right_link"/>
    <axis xyz="0 0 1" />
  </joint>




<gazebo>

  <plugin name="gazebo_ros_ackermann_drive" filename="libgazebo_ros_ackermann_drive.so">

    <ros>
      <namespace>demo</namespace>
      <remapping>cmd_vel:=cmd_demo</remapping>
      <remapping>odom:=odom_demo</remapping>
      <remapping>distance:=distance_demo</remapping>

    </ros>

    <update_rate>100.0</update_rate>

    <!-- wheels -->
    <front_left_joint>left_front_wheel_joint</front_left_joint>
    <front_right_joint>right_front_wheel_joint</front_right_joint>

    <rear_left_joint>left_rear_wheel_joint</rear_left_joint>
    <rear_right_joint>right_rear_wheel_joint</rear_right_joint>

    <left_steering_joint>left_steering_hinge_joint</left_steering_joint>
    <right_steering_joint>right_steering_hinge_joint</right_steering_joint>

    <!-- Max absolute steer angle for tyre in radians-->
    <!-- Any cmd_vel angular z greater than this would be capped -->
    <max_steer>0.6458</max_steer>

    <!-- Max absolute steering angle of steering wheel -->
    <max_steering_angle>7.85</max_steering_angle>

    <!-- Max absolute linear speed in m/s -->
    <max_speed>20</max_speed>

    <!-- PID tuning -->
    <left_steering_pid_gain>1500 0 1</left_steering_pid_gain>
    <left_steering_i_range>0 0</left_steering_i_range>
    <right_steering_pid_gain>1500 0 1</right_steering_pid_gain>
    <right_steering_i_range>0 0</right_steering_i_range>
    <linear_velocity_pid_gain>1000 0 1</linear_velocity_pid_gain>
    <linear_velocity_i_range>0 0</linear_velocity_i_range>

    <!-- output -->
    <publish_odom>true</publish_odom>
    <publish_odom_tf>true</publish_odom_tf>
    <publish_wheel_tf>true</publish_wheel_tf>
    <publish_distance>true</publish_distance>

    <odometry_frame>odom_demo</odometry_frame>
    <robot_base_frame>chassis</robot_base_frame>


  </plugin>

</gazebo>