<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="f1_robot">

  <!-- Define robot constants -->
  <xacro:property name="base_width" value="0.31"/>
  <xacro:property name="base_length" value="0.55"/>
  <xacro:property name="base_height" value="0.15"/>
  <xacro:property name="wheel_radius" value="0.10"/>
  <xacro:property name="wheel_width" value="0.05"/>
  <xacro:property name="wheel_zoff" value="0.07"/>
  <xacro:property name="wheel_xoff_front" value="0.15"/>
  <xacro:property name="wheel_xoff_rear" value="-0.15"/>

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>



  </link>


  <!-- Front Left Wheel (Steerable) -->
  <link name="front_left_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>


    <inertial>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <mass value="1.3729096e+00"/>
              <inertia ixx="8.7002718e-03" ixy="-4.7576583e-05" ixz="1.1160499e-04"
                        iyy="8.6195418e-03" iyz="-3.5422299e-06"
                        izz="1.4612727e-02" />
    </inertial>

  </link>
  
  <joint name="front_left_joint" type="revolute">
    <parent link="base_link"/>
    <child link="front_left_wheel"/>
    <origin xyz="${wheel_xoff_front} ${base_width/2 + wheel_width/2} ${-wheel_zoff}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit lower="-1" upper="1" effort="1000" velocity="1"/>
  </joint>


  <!-- Front Right Wheel (Steerable) -->
  <link name="front_right_wheel">
    <visual>\
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>

    <inertial>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <mass value="1.3729096e+00"/>
              <inertia ixx="8.7002718e-03" ixy="-4.7576583e-05" ixz="1.1160499e-04"
                        iyy="8.6195418e-03" iyz="-3.5422299e-06"
                        izz="1.4612727e-02" />
    </inertial>

  </link>

  <joint name="front_right_joint" type="revolute">
    <parent link="base_link"/>
    <child link="front_right_wheel"/>
    <origin xyz="${wheel_xoff_front} ${-base_width/2 - wheel_width/2} ${-wheel_zoff}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit lower="-1" upper="1" effort="1000" velocity="1"/>
  </joint>


  <!-- Rear Left Wheel (Fixed) -->
  <link name="rear_left_wheel">
    <visual>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>

    <inertial>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <mass value="1.3729096e+00"/>
              <inertia ixx="8.7002718e-03" ixy="-4.7576583e-05" ixz="1.1160499e-04"
                        iyy="8.6195418e-03" iyz="-3.5422299e-06"
                        izz="1.4612727e-02" />
    </inertial>

  </link>

  <joint name="rear_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rear_left_wheel"/>
    <origin xyz="${wheel_xoff_rear} ${base_width/2 + wheel_width/2} ${-wheel_zoff}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>


 <!-- Rear Right Wheel (Fixed) -->
  <link name="rear_right_wheel">
    <visual>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>


    <inertial>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <mass value="1.3729096e+00"/>
              <inertia ixx="8.7002718e-03" ixy="-4.7576583e-05" ixz="1.1160499e-04"
                        iyy="8.6195418e-03" iyz="-3.5422299e-06"
                        izz="1.4612727e-02" />
    </inertial>

  </link>

  <joint name="rear_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rear_right_wheel"/>
    <origin xyz="${wheel_xoff_rear} ${-base_width/2 - wheel_width/2} ${-wheel_zoff}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <!-- Robot Footprint -->
  <link name="base_footprint"/>
  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>


  <!-- Sensors plug in  -->
  <!-- Adding Gazebo Plugins to a URDF -->

  <!-- lidar -->

  <link name="lidar_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.125"/>
      <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find f1_robot_model)/meshes/hokuyo.stl"/>
        <material name="grey" />
      </geometry>
    </visual>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 0.12" rpy="0 0 0"/>
  </joint>

  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin name="ackermann_drive_controller" filename="libgazebo_ros_ackermann_drive.so">
      <ros>
        <namespace>/f1_robot</namespace>
        <remapping>cmd_vel:=cmd_vel</remapping>
      </ros>

      <!-- Ackermann Drive Settings -->
      <steering_left_joint>front_left_joint</steering_left_joint>
      <steering_right_joint>front_right_joint</steering_right_joint>
      <front_left_joint>front_left_wheel</front_left_joint>
      <front_right_joint>front_right_wheel</front_right_joint>
      <rear_left_joint>rear_left_wheel</rear_left_joint>
      <rear_right_joint>rear_right_wheel</rear_right_joint>


      <!-- Wheel Parameters -->
      <wheelbase>0.55</wheelbase>
      <front_track>0.31</front_track>
      <rear_track>0.31</rear_track>
      <wheel_radius>${wheel_radius}</wheel_radius>
      <torque>10</torque>
      <speed>5</speed>
      <update_rate>100.0</update_rate>

      <!-- Steering Limits -->
      <max_steering_angle>0.785398</max_steering_angle>
      <min_steering_angle>-0.785398</min_steering_angle>

      <!-- PID Controller for Steering -->
      <pid>
        <p>100.0</p>
        <i>0.1</i>
        <d>10.0</d>
        <i_clamp>1.0</i_clamp>
      </pid>
    </plugin>
  </gazebo>



</robot>


  <!-- Add Hokuyo laser scanner

  <link name="hokuyo_laser">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find f1_robot_model)/meshes/hokuyo.stl"/>
        <material name="grey" />
      </geometry>
    </visual>
  </link>

  <joint name="$laser_hokuyo_joint" type="fixed">
    <origin xyz="0.125 0.0 0.155" rpy="0 0 0"/>
    <parent link="base_link" />
    <child link="hokuyo_laser" />
    <axis xyz="0 0 1" />
  </joint> -->